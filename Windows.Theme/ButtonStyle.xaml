<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Windows.Theme">

    <!--ButtonBase基样式-->
    <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary Source="Colors.xaml" />
        <!--<ResourceDictionary Source="pack://application:,,,/BootstrapWpfStyle;component/Styles/Colors.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/BootstrapWpfStyle;component/Styles/Fonts.xaml"></ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/BootstrapWpfStyle;component/Styles/Sizes.xaml"></ResourceDictionary>-->
    </ResourceDictionary.MergedDictionaries>




    <!-- Button case-->
    <Style x:Key="Menu_Close_Button" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <Image  Stretch="Uniform" Source="Image/Icon/I_close_0.png"   />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border>
                                <Image  Stretch="Uniform" Source="Image/Icon/I_close_1.png"   />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!-- AppButtoncase-->
    <Style x:Key="App_Menu_Close_Button" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <Image  Stretch="Uniform" Source="Image/Icon/I_App_close_0.png"    />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border>
                                <Image  Stretch="Uniform" Source="Image/Icon/I_App_close_1.png"    />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                    
                </Setter>
            </Trigger>

           
            
        </Style.Triggers>
        
        
    </Style>



    <!-- DlgCloseButton-->
    <Style x:Key="Dlg_Close_Button" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Margin="0">
                        <Image  Stretch="Uniform" Source="Image/Icon/I_close_V6_1.png"   />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Margin="0">
                                <Image  Stretch="Uniform" Source="Image/Icon/I_close_V6_0.png"   />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Button case-->
    <Style x:Key="App_Menu_Option_Button" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <Image  Stretch="Uniform" Source="Image/Icon/I_menu_0.png"  />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border>
                                <Image  Stretch="Uniform" Source="Image/Icon/I_menu_1.png"  />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    <!--Ok button-->

    <Style x:Key="OkButtonNew" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#4296DA" Background="#42A2DA" >
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" FontWeight="Bold" Foreground="White">
                            OK
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#4296DA" Background="#368EC4" >
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" FontWeight="Bold" Foreground="White">
                                     OK
                                </TextBlock>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <!--Daochu button-->

    <Style x:Key="DaochuButtonNew" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#4296DA" Background="#42A2DA" >
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" FontWeight="Bold" Foreground="White">
                            导出
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#4296DA" Background="#368EC4" >
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" FontWeight="Bold" Foreground="White">
                                     导出
                                </TextBlock>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Cancel button-->

    <Style x:Key="OkButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#B4B6BA"  >
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#3D3D41">
                            OK
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#3D3D3D" Background="#E2E3E3" >
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#3D3D41">
                                    OK
                                </TextBlock>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--daoruqiaozhi button-->
    <Style x:Key="daoruqiaozhiButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border BorderThickness="1" CornerRadius="2" Height="25" Width="80" BorderBrush="#B4B6BA"  >
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#3D3D41" IsEnabled="True">
                            导入桥智数据
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="1" CornerRadius="2" Height="25" Width="80" BorderBrush="#3D3D3D" Background="#E2E3E3" >
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#3D3D41" IsEnabled="True">
                                    导入桥智数据
                                </TextBlock>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="daochuButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#B4B6BA"  >
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#3D3D41" IsEnabled="True">
                            导出
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True" >
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#3D3D3D" Background="#E2E3E3" >
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#3D3D41" IsEnabled="True">
                                    导出
                                </TextBlock>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="daoruButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#B4B6BA"  >
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#3D3D41">
                            导入
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#3D3D3D" Background="#E2E3E3" >
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#3D3D41">
                                    导入
                                </TextBlock>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Cancel button-->

    <Style x:Key="CancelButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#B4B6BA" >
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#3D3D41">
                            Cancel
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#3D3D3D" Background="#E2E3E3" >
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#3D3D41">
                                    Cancel
                                </TextBlock>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>




    <!--Cancel button-->

    <Style x:Key="PreviewButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#B4B6BA"  >
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#3D3D41">
                           Preview
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#3D3D3D" Background="#E2E3E3" >
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#3D3D41">
                                   Preview
                                </TextBlock>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

 

    <!--General button-->


    <!--SelObject button-->
    <Style x:Key="SelectionButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border BorderThickness="1" CornerRadius="2" Height="25" Width="250" BorderBrush="#B4B6BA"   Margin="0,0,0,0"  >
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" ></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}" >
                            <Border BorderThickness="1" CornerRadius="2" Height="25" Width="250" BorderBrush="#3D3D3D" Background="#E2E3E3"  Margin="0,0,0,0"  >
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" ></ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--SelObject button-->
    <Style x:Key="GeneralButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#B4B6BA"   Margin="0,0,0,0"  >
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" ></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}" >
                            <Border BorderThickness="1" CornerRadius="2" Height="25" Width="60" BorderBrush="#3D3D3D" Background="#E2E3E3"  Margin="0,0,0,0"  >
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" HorizontalAlignment="Center" VerticalAlignment="Center" ></ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    

    <!--SelObject button-->

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="1" CornerRadius="2" Height="22" Width="200" BorderBrush="#B4B6BA"  >
                        <!--<TextBox Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#3D3D41"/>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border BorderThickness="1" CornerRadius="2" Height="22" Width="200" BorderBrush="#3D3D3D" Background="#E2E3E3" >
                                --><!--<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#3D3D41"/>--><!--
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>-->
    </Style>



    <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Rectangle RadiusX="2" HorizontalAlignment="Center" VerticalAlignment="Center" RadiusY="2" Width="250" Height="25" Fill="{TemplateBinding Background}" Stroke="#B4B6BA"  />
                        <ScrollViewer x:Name="PART_ContentHost"  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Padding="{TemplateBinding Padding}" Width="200"  Height="22" Focusable="false">
                           
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ComboBoxTextBox1" TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="1"></Setter>
        <Setter Property="Width" Value="250"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border  BorderBrush="#B4B6BA" BorderThickness="1" CornerRadius="2" Background="Transparent" Height="24" Width="250" >
                        <Grid>
                            <!--下拉箭头-->
                            <ToggleButton ClickMode="Press" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Width="Auto">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="MinHeight" Value="0"/>
                                        <Setter Property="Width" Value="Auto"/>
                                        <Setter Property="Height" Value="Auto"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="#00000000"/>
                                        <Setter Property="BorderThickness" Value="2"/>
                                        <Setter Property="Template">

                                            <Setter.Value>

                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <DockPanel Background="{TemplateBinding Background}" LastChildFill="False" SnapsToDevicePixels="True">
                                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"  DockPanel.Dock="Right" >
                                                            <Path Data="M0,0L3.5,4 7,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                        </Border>
                                                    </DockPanel>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">

                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                            </Trigger>

                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <!--项内容-->
                            <ContentPresenter  IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Center" Margin="3" HorizontalAlignment="Stretch" />
                            <TextBox x:Name="PART_EditableTextBox" HorizontalAlignment="Stretch" Focusable="True" Visibility="Collapsed" IsReadOnly="False"/>
                            <!--下拉显示面板HorizontalOffset:设置下拉面板的相对位置-->
                            <Popup HorizontalOffset="-1" Width="{TemplateBinding ActualWidth}"
                                       IsOpen="{TemplateBinding IsDropDownOpen}" Focusable="False"    PopupAnimation="Slide">
                                <Grid  SnapsToDevicePixels="True" HorizontalAlignment="Stretch">
                                    <Border  BorderThickness="1,1,1,1" BorderBrush="Gray" HorizontalAlignment="Stretch"   CornerRadius="2">
                                        <Border.Background>
                                            <SolidColorBrush Color="White" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer  SnapsToDevicePixels="True" HorizontalAlignment="Stretch" >
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" HorizontalAlignment="Stretch"  />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    

</ResourceDictionary>